<!-- Begin Page Content -->
<div class="container-fluid mx-5">

    <!-- Page Heading -->
    <h1 class="h1 mb-2 text-gray-800">Show Charts</h1>

    <div class="row">
        <div class="col-xl-3 col-md-6 mb-4">
            <select id="EmployeeId" class="form-control mb-2" style="width: 200px;"
                asp-items="ViewBag.EmployeeId"></select>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <select id="ddlYear" class="form-control mb-2" style="width: 150px;">
                <option value="0">Select year</option>
                <option value="2018">2018</option>
                <option value="2019">2019</option>
                <option value="2020">2020</option>
                <option value="2021">2021</option>
                <option value="2022">2022</option>
                <option value="2022">2023</option>
            </select>
        </div>
    </div>


    <!-- Content Row -->
    <div class="row">
        <div class="col-xl-8 col-lg-7">
            <!-- Area Chart -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Area Chart</h6>
                </div>
                <div class="card-body">
                    <div class="chart-area" id="dvChart">
                        <canvas id="myAreaChart"></canvas>
                    </div>
                    <hr>
                    Salary process of employee in the year
                </div>
            </div>
        </div>
        <!-- Content Row -->
        <div class="row ml-3">
            <div class="col">
                <!-- Earnings (Monthly) Card Example -->
                <div class="row ml-3 mb-5">
                    <div class="card border-left-primary shadow h-100 py-2">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                        Earnings (Monthly)</div>
                                    <div id="EarningsMonthly" class="h5 mb-0 font-weight-bold text-gray-800">$40,000
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-calendar fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Earnings (Monthly) Card Example -->
                <div class="row ml-3">
                    <div class="card border-left-success shadow h-100 py-2 pr-3">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-2">
                                    <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                        Earnings (Annual)</div>
                                    <div id="EarningsAnnual" class="h5 mb-0 font-weight-bold text-gray-800">$215,000
                                    </div>
                                </div>
                                <div class="col-auto">
                                    <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

<script>

    // onchange for selector
    var listData = []

    $(document).ready(function () {
        GetReportSalaryForEmpByYear();
    })

    $("#EmployeeId").change(function () {
        GetReportSalaryForEmpByYear();
    });
    $("#ddlYear").change(function () {
        GetReportSalaryForEmpByYear();
        console.log(`ddlYear: ${$('#ddlYear').val()}`)
    });



    var GetReportSalaryForEmpByYear = function () {

        let currentYear = new Date().getFullYear();
        var yearVal = $('#ddlYear').val() == 0 ? currentYear : $('#ddlYear').val()

        $.ajax({
            url: '@Url.Action("GetReportSalaryForEmpByYear","Salary")',
            type: 'GET',
            data: {
                EmpID: $('#EmployeeId').val(),
                year: yearVal,
            },
            success: function (data) {
                @* console.log(`data in ddlYear: ${JSON.stringify(data)}`) *@
                var year = data.year

                listData = data
                RegisterChart(listData)


                var earningsMonthly = 0
                var earningsAnnual = 0

                for (let i = 0; i < listData.length; i++) {
                    earningsAnnual += listData[i]
                }

                earningsMonthly = (earningsAnnual / 12).toFixed(2);

                $("#EarningsMonthly").html(`<div id="EarningsMonthly" class="h5 mb-0 font-weight-bold text-gray-800">$${earningsMonthly}</div>`)
                $("#EarningsAnnual").html(`<div id="EarningsAnnual" class="h5 mb-0 font-weight-bold text-gray-800">$${earningsAnnual}</div>`)


            },
            error: function () {
            }
        });
    }



    function RegisterChart(listData) {

        $("canvas#myAreaChart").remove()
        $("#dvChart").html(`<canvas id="myAreaChart"></canvas>`);


        var lsDataSource = [];

        lsDataSource = listData

        var areaChartData = {
            labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            datasets: [{
                label: "Earnings",
                lineTension: 0.3,
                backgroundColor: "rgba(78, 115, 223, 0.05)",
                borderColor: "rgba(78, 115, 223, 1)",
                pointRadius: 3,
                pointBackgroundColor: "rgba(78, 115, 223, 1)",
                pointBorderColor: "rgba(78, 115, 223, 1)",
                pointHoverRadius: 3,
                pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                pointHitRadius: 10,
                pointBorderWidth: 2,
                data: lsDataSource,
            }],
        }

        // Area Chart Example
        var ctx = document.getElementById("myAreaChart");
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: areaChartData,
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'date'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 7
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    intersect: false,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                        }
                    }
                }
            }
        });
    }

    // Set new default font family and font color to mimic Bootstrap's default styling
    Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
    Chart.defaults.global.defaultFontColor = '#858796';

    function number_format(number, decimals, dec_point, thousands_sep) {
        // *     example: number_format(1234.56, 2, ',', ' ');
        // *     return: '1 234,56'
        number = (number + '').replace(',', '').replace(' ', '');
        var n = !isFinite(+number) ? 0 : +number,
            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
            s = '',
            toFixedFix = function (n, prec) {
                var k = Math.pow(10, prec);
                return '' + Math.round(n * k) / k;
            };
        // Fix for IE parseFloat(0.55).toFixed(0) = 0;
        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
        if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
        }
        if ((s[1] || '').length < prec) {
            s[1] = s[1] || '';
            s[1] += new Array(prec - s[1].length + 1).join('0');
        }
        return s.join(dec);
    }

</script>
}